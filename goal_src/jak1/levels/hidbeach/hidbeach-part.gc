;;-*-Lisp-*-
(in-package goal)

;; EBR notes: SOMETHING IN THIS FILE IS CONFLICTING WITH ZOOMER PARTICLES (COLLISION WHEN JUMPING AND HITTING GROUND)
(deftype hidbeach-part (part-spawner)
  ()
  )

;; group-id range for hid-beach :
;; part-id range for hid-beach : 

;; EBR notes: have to add warpgate particles into level with warpgate since warping deloads previous level
(defpartgroup group-hidbeach-warpgate ;; taken from training-part.gc
  :id 731 ;;930
  :bounds (static-bspherem 0 0 0 8)
  :parts ((sp-item 3106 :fade-after (meters 60) :falloff-to (meters 60))
    (sp-item 3107 :fade-after (meters 60) :falloff-to (meters 100) :binding 3104)
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3104 :flags (bit1 start-dead launch-asap))
    (sp-item 3108 :fade-after (meters 60) :falloff-to (meters 100) :binding 3105)
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3105 :flags (bit1 start-dead launch-asap))
    (sp-item 3109 :fade-after (meters 100) :flags (is-3d))
    )
  )

(defpart 3109
  :init-specs ((:texture (new 'static 'texture-id :index #x3 :page #x2))
    (:num 0.5)
    (:x (meters 0))
    (:scale-x (meters 5))
    (:rot-x (degrees 90))
    (:rot-z (degrees 15))
    (:scale-y :copy scale-x)
    (:r 0.0 32.0)
    (:g 0.0 32.0)
    (:b 64.0 64.0)
    (:a 0.0 64.0)
    (:timer (seconds 0.035))
    (:flags (bit3 bit14))
    )
  )

(defpart 3108
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x2))
    (:num 0.25)
    (:x (meters -2))
    (:scale-x (meters 0.25))
    (:scale-y :copy scale-x)
    (:g 128.0)
    (:a 0.0)
    (:vel-x (meters 0.0033333334))
    (:timer (seconds 2))
    (:flags (bit3 bit14))
    (:rotate-y (degrees -105))
    )
  )

(defpart 3105
  :init-specs ((:texture (new 'static 'texture-id :index #x4 :page #x2))
    (:num 1.0)
    (:x (meters -0.6666667))
    (:y (meters 4))
    (:z (meters 5.4) (meters 1))
    (:scale-x (meters 0.2) (meters 0.1))
    (:scale-y :copy scale-x)
    (:r 0.0 32.0)
    (:g 0.0 32.0)
    (:b 64.0 196.0)
    (:a 0.0)
    (:omega 0.0 65536.0)
    (:vel-x (meters 0))
    (:vel-z (meters 0))
    (:fade-a 0.16)
    (:accel-x (meters 0.0002962963))
    (:accel-z (meters -0.00018333334))
    (:timer (seconds 2))
    (:flags (bit2 bit3 bit7 bit14))
    )
  )

(defpart 3106
  :init-specs ((:num 3.0 3.0)
    (:x (meters -0.5))
    (:rot-x 5)
    (:r 4096.0)
    (:g 3481.6)
    (:b 3481.6)
    (:vel-y (meters -0.026666667) (meters -0.02))
    (:fade-b 2.968116)
    (:timer (seconds 0.23))
    (:flags (aux-list))
    (:conerot-x (degrees 0) (degrees 360))
    (:conerot-radius (meters 4) (meters 3))
    (:rotate-y (degrees -105))
    )
  )

(defpart 3107
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x2))
    (:num 1.0)
    (:scale-x (meters 0.25))
    (:scale-y :copy scale-x)
    (:g 128.0)
    (:a 0.0)
    (:accel-x (meters 0.000016666667))
    (:timer (seconds 2.3))
    (:flags (bit3 bit14))
    (:rotate-y (degrees -105))
    )
  )

(defpart 3104
  :init-specs ((:texture (new 'static 'texture-id :page #x2))
    (:num 1.0)
    (:x (meters -0.6666667))
    (:y (meters 4))
    (:z (meters 2.4))
    (:scale-x (meters 1.1) (meters 0.6))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 0.0 32.0)
    (:g 0.0 32.0)
    (:b 64.0 64.0)
    (:a 8.0 32.0)
    (:omega 0.0 65536.0)
    (:vel-x (meters -0.0044444446))
    (:vel-z (meters -0.0034999999))
    (:rotvel-z (degrees 0) (degrees 1.2))
    (:fade-a 0.21333334)
    (:accel-x (meters 0.0010370371))
    (:timer (seconds 2.3))
    (:flags (bit2 bit3 bit7 bit14))
    )
  )

#|
(defpartgroup group-northern-disco
  :id 904
  :flags (always-draw unknown-bit-01)
  :bounds (static-bspherem 0 55 0 55)
  :parts (
    (sp-item 3430)
    (sp-item 3431)
    )
  )

(defpart 3430 ;; (teal-northern lights)
  :init-specs ((:texture (new 'static 'texture-id :index #x18 :page #x2))
    (:num 1.0 1.0)
    (:x (meters 0) (meters 100))
    (:y (meters 15))
    (:z (meters 0) (meters 150))
    (:scale-x (meters 2.4) (meters 100.6))
    (:scale-y (meters 1.2) (meters 100.8))
    (:r 0.0)
    (:g 192.0)
    (:b 192.0)
    (:a 24.0 16.0)
    (:vel-x (meters 0.06666667))
    (:vel-y (meters 0.013333334) (meters 0.013333334))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0073242188))
    (:scalevel-y (meters 0.029296875))
    (:accel-x (meters -0.00091074686))
    (:accel-y (meters -0.0036666668) (meters -0.00066666666))
    (:timer (seconds 0.3))
    (:flags (bit2 bit12 bit14))
    (:launchrot-x (degrees -15) (degrees 30))
    (:rotate-y (degrees -90))
    )
  )


(defpart 3431 ;; (violet-northern lights)
  :init-specs ((:texture (new 'static 'texture-id :index #x18 :page #x2))
    (:num 1.0 1.0)
    (:x (meters 0) (meters 100))
    (:y (meters 15))
    (:z (meters 0) (meters 150))
    (:scale-x (meters 2.4) (meters 100.6))
    (:scale-y (meters 1.2) (meters 100.8))
    (:r 191.0)
    (:g 0.0)
    (:b 255.0)
    (:a 24.0 16.0)
    (:vel-x (meters 0.06666667))
    (:vel-y (meters 0.013333334) (meters 0.013333334))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0073242188))
    (:scalevel-y (meters 0.029296875))
    (:accel-x (meters -0.00091074686))
    (:accel-y (meters -0.0036666668) (meters -0.00066666666))
    (:timer (seconds 0.3))
    (:flags (bit2 bit12 bit14))
    (:launchrot-x (degrees -15) (degrees 30))
    (:rotate-y (degrees -90))
    )
  )

(defpartgroup group-cloud-storm
  :id 905
  :flags (use-local-clock)
  :bounds (static-bspherem 0 0 0 32)
  :parts ((sp-item 3445) (sp-item 3443) (sp-item 3440) (sp-item 3441))
  )

(defpart 3440 ;; (discolights)
  :init-specs ((:texture (new 'static 'texture-id :index #x2 :page #x2))
    (:num 0.5)
    (:scale-x (meters 10.5) (meters 4.5))
    (:rot-x 4)
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 2.1) (meters 1.8))
    (:r 0.0 1 255.0)
    (:g 0.0 1 255.0)
    (:b 0.0 1 255.0)
    (:a 0.0)
    (:scalevel-x (meters 0.009765625))
    (:rotvel-z (degrees -0.15) (degrees 0.3))
    (:scalevel-y (meters 0.009765625))
    (:fade-a 0.35555556)
    (:timer (seconds 1))
    (:flags (bit2 bit3 bit14))
    (:next-time (seconds 0.3))
    (:next-launcher 3442)
    )
  )

(defpart 3442
  :init-specs ((:fade-a -0.53333336))
  )

(defpart 3443 ;; (white eco cloud)
  :init-specs ((:texture (new 'static 'texture-id :page #x2))
    (:num 0.05 0.05)
    (:x (meters -0.001) (meters 0.002))
    (:y (meters -0.001) (meters 0.002))
    (:z (meters -0.001) (meters 0.002))
    (:scale-x (meters 10) (meters 5))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 192.0 64.0)
    (:g 192.0 64.0)
    (:b 192.0 64.0)
    (:a 0.0)
    (:vel-y (meters 0))
    (:scalevel-x (meters 0.016666668))
    (:rotvel-z (degrees -0.3) (degrees 0.6))
    (:scalevel-y :copy scalevel-x)
    (:fade-a 0.21333334)
    (:timer (seconds 2))
    (:flags (bit2 bit3))
    (:next-time (seconds 0.8) (seconds 0.197))
    (:next-launcher 3444)
    )
  )

(defpart 3444
  :init-specs ((:fade-a -0.21333334))
  )

(defpartgroup group-ground-holo
  :id 906
  :duration (seconds 3)
  :flags (use-local-clock)
  :bounds (static-bspherem 0 0 0 64)
  :parts ((sp-item 3450)
    (sp-item 3451 :flags (is-3d))
    (sp-item 3452 :flags (is-3d))
    (sp-item 3453 :flags (is-3d))
    (sp-item 3454)
    (sp-item 3455)
    )
  )

(defpart 3450
  :init-specs ((:num 1.5)
    (:x (meters 2.5))
    (:y (meters -0.5))
    (:rot-x 8)
    (:r 4096.0)
    (:g 2867.2)
    (:b 3276.8)
    (:vel-y (meters 0.026666667))
    (:timer (seconds 0.9))
    (:flags (aux-list))
    (:next-time (seconds 0.6))
    (:next-launcher 3456)
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 3456
  :init-specs ((:fade-b -4.551111))
  )

(defpart 3451 ;; (zordon tube streak lights)
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x2))
    (:num 1.0)
    (:x (meters 0) (meters 20))
    (:y (meters 0) (meters 16))
    (:scale-x (meters 0.2) (meters 0.2))
    (:rot-x (degrees 90))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 8) (meters 8))
    (:r 0.0 1 128.0)
    (:g 64.0 196.0)
    (:b 128.0 128.0)
    (:a 128.0)
    (:scalevel-x (meters -0.0025))
    (:scalevel-y (meters 0.24414062) (meters 0.48828125))
    (:timer (seconds 0.27))
    (:flags (bit3 bit14))
    (:rotate-y (degrees 0) (degrees 360))
    )
  )

(defpart 3452 ;; (soundwave condensed version of zordon)
  :init-specs ((:texture (new 'static 'texture-id :index #xf :page #x2))
    (:num 1.0 2.0)
    (:x (meters 1.8) (meters 10))
    (:scale-x (meters 0.2) (meters 0.1))
    (:rot-x (degrees 90))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y (meters 1) (meters 3))
    (:r 0.0 1 128.0)
    (:g 64.0 196.0)
    (:b 128.0 128.0)
    (:a 128.0)
    (:scalevel-x (meters -0.0025))
    (:scalevel-y (meters 0.048828125) (meters 0.09765625))
    (:timer (seconds 0.27))
    (:flags (bit3 bit14))
    (:rotate-y (degrees 0) (degrees 360))
    )
  )
|#
#|
(defpartgroup group-stilt-riverwater-01
  :id 907
  :flags (always-draw unknown-bit-01)
  :bounds (static-bspherem 0 55 0 55)
  :parts (
    (sp-item 3460)
    (sp-item 3460 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 3460 :fade-after (meters 160) :falloff-to (meters 160))
    (sp-item 3461 :fade-after (meters 300) :falloff-to (meters 300))
    (sp-item 3462 :fade-after (meters 90) :falloff-to (meters 90))
    )
  )

(defpart 3460
  :init-specs ((:texture (new 'static 'texture-id :index #x18 :page #x2))
    (:num 1.0 1.0)
    (:x (meters -10) (meters 4))
    (:y (meters 0))
    (:z (meters -8.5) (meters 16))
    (:scale-x (meters 2.4) (meters 1.6))
    (:scale-y (meters 1.2) (meters 0.8))
    (:r 192.0)
    (:g 192.0)
    (:b 255.0)
    (:a 24.0 16.0)
    (:vel-x (meters 0.06666667));; 0.06666667
    (:vel-y (meters 0.013333334) (meters 0.013333334))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0073242188))
    (:scalevel-y (meters 0.029296875))
    (:accel-x (meters -0.00091074686))
    (:accel-y (meters -0.0036666668) (meters -0.00066666666))
    (:timer (seconds 0.3))
    (:flags (bit2 bit12 bit14))
    (:launchrot-x (degrees -15) (degrees 30))
    (:rotate-y (degrees -90))
    )
  )

(defpart 3461
  :init-specs ((:texture (new 'static 'texture-id :page #x2))
    (:num 0.8 0.8)
    (:x (meters -9) (meters 3.5))
    (:y (meters 0))
    (:z (meters -8.5) (meters 16))
    (:scale-x (meters 1.2) (meters 0.8))
    (:rot-z (degrees 0) (degrees 180))
    (:scale-y (meters 1.2) (meters 0.8))
    (:r 192.0)
    (:g 192.0)
    (:b 255.0)
    (:a 16.0 20.0)
    (:vel-x (meters 0.038333334))
    (:vel-y (meters 0.0033333334) (meters 0.01))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0146484375))
    (:rotvel-z (degrees -0.6) (degrees 1.2))
    (:scalevel-y (meters 0.0146484375))
    (:accel-x (meters -0.00029040404))
    (:accel-y (meters -0.0011666666) (meters -0.00025))
    (:timer (seconds 0.52))
    (:flags (bit2 bit12 bit14))
    (:rotate-y (degrees -90))
    )
  )

(defpart 3462
  :init-specs ((:texture (new 'static 'texture-id :index #x4 :page #x2))
    (:num 0.9)
    (:x (meters -10) (meters 4))
    (:y (meters 0))
    (:z (meters -9.5) (meters 18))
    (:scale-x (meters 0.2) (meters 0.2))
    (:scale-y :copy scale-x)
    (:r 128.0)
    (:g 128.0)
    (:b 255.0)
    (:a 28.0)
    (:vel-x (meters 0.06) (meters 0.006666667))
    (:vel-y (meters 0.0033333334) (meters 0.02))
    (:vel-z (meters -0.006666667) (meters 0.013333334))
    (:scalevel-x (meters -0.00024414062))
    (:scalevel-y (meters 0.001953125))
    (:accel-x (meters -0.00062500004))
    (:accel-y (meters -0.0016666667) (meters -0.00083333335))
    (:timer (seconds 0.4))
    (:flags (bit2 bit3 bit12 bit14))
    (:launchrot-x (degrees -20) (degrees 40))
    (:rotate-y (degrees -90))
    )
  )

(defpartgroup group-stilt-riverwater-02
  :id 908
  :flags (always-draw unknown-bit-01)
  :bounds (static-bspherem 0 55 0 55)
  :parts (
    (sp-item 3470)
    (sp-item 3470 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 3470 :fade-after (meters 160) :falloff-to (meters 160))
    (sp-item 3471 :fade-after (meters 300) :falloff-to (meters 300))
    (sp-item 3472 :fade-after (meters 90) :falloff-to (meters 90))
    )
  )

(defpart 3470 ;; (water falling)
  :init-specs ((:texture (new 'static 'texture-id :index #x18 :page #x2))
    (:num 150.0 150.0)
    (:x (meters 0) (meters 458))
    (:y (meters 0))
    (:z (meters 0) (meters 242))
    (:scale-x (meters 2.4) (meters 1.6))
    (:scale-y (meters 1.2) (meters 0.8))
    (:r 0.0)
    (:g 192.0)
    (:b 255.0)
    (:a 24.0 16.0)
    (:vel-x (meters 0.06666667));; 0.06666667
    (:vel-y (meters 0.013333334) (meters 0.013333334))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0073242188))
    (:scalevel-y (meters 0.029296875))
    (:accel-x (meters -0.00091074686))
    (:accel-y (meters -0.0036666668) (meters -0.00066666666))
    (:timer (seconds 0.3))
    (:flags (bit2 bit12 bit14))
    (:launchrot-x (degrees -15) (degrees 30))
    (:rotate-y (degrees -90))
    )
  )

(defpartgroup group-stilt-riverwater-03
  :id 909
  :flags (always-draw unknown-bit-01)
  :bounds (static-bspherem 0 55 0 55)
  :parts (
    (sp-item 3480)
    (sp-item 3480 :fade-after (meters 100) :falloff-to (meters 100))
    (sp-item 3480 :fade-after (meters 160) :falloff-to (meters 160))
    (sp-item 3481 :fade-after (meters 300) :falloff-to (meters 300))
    (sp-item 3482 :fade-after (meters 90) :falloff-to (meters 90))
    )
  )

(defpart 3480 ;; (water falling)
  :init-specs ((:texture (new 'static 'texture-id :index #x18 :page #x2))
    (:num 10.0 10.0)
    (:x (meters 0) (meters 70))
    (:y (meters 0))
    (:z (meters 0) (meters 162))
    (:scale-x (meters 2.4) (meters 1.6))
    (:scale-y (meters 1.2) (meters 0.8))
    (:r 0.0)
    (:g 192.0)
    (:b 255.0)
    (:a 24.0 16.0)
    (:vel-x (meters 0.06666667));; 0.06666667
    (:vel-y (meters 0.013333334) (meters 0.013333334))
    (:vel-z (meters -0.0033333334) (meters 0.006666667))
    (:scalevel-x (meters 0.0073242188))
    (:scalevel-y (meters 0.029296875))
    (:accel-x (meters -0.00091074686))
    (:accel-y (meters -0.0036666668) (meters -0.00066666666))
    (:timer (seconds 0.3))
    (:flags (bit2 bit12 bit14))
    (:launchrot-x (degrees -15) (degrees 30))
    (:rotate-y (degrees -90))
    )
  )
|#
#|
(defpartgroup group-white-cloud
  :id 910
  :flags (always-draw unknown-bit-01)
  :bounds (static-bspherem 0 55 0 55)
  :parts ((sp-item 3443)
    )
  )
|#
